<jittershader name="Archimedean Spiral">
    <description>
        Distorts texture along an Archimedean Spiral
    </description>

    <param name="a" type="float" default="1.0">
        <description>
            The distance between spiral arms
        </description>
    </param>

    <param name="tex0" type="int" default="0"/>

    <language name="glsl" version="1.2">
    
        <bind param="a" program="fp"/>
        <bind param="tex0" program="fp"/>

        <program name="vp" type="vertex">
<![CDATA[

    #version 120

    varying vec2 texcoord0;
    varying vec2 texdim0;

    void main(void) {

        gl_Position = ftransform();

        texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);

        texdim0 = vec2(abs(gl_TextureMatrix[0][0][0]), abs(gl_TextureMatrix[0][1][1]));
    }

]]>

        </program>
        <program name="fp" type="fragment">
<![CDATA[

    #version 120

    varying vec2 texdim0;
    varying vec2 texcoord0;

    uniform float a;

    uniform sampler2DRect tex0;

    vec2 getNormXY(vec2 pos) {

        vec2 posOutput;

        float xPos = a * (atan(pos.y / pos.x)) - pos.y;
        float yPos = a * (atan(pos.y / pos.x)) - pos.x;

        posOutput = vec2(xPos, yPos);

        return posOutput;
    }

    void main(void) {

        vec2 normPos = vec2(texcoord0 / texdim0);

        vec2 snormPos = vec2((normPos.x * 2.0) - 1.0, (normPos.y * 2) - 1);

        vec2 spiralNormPos = getNormXY(snormPos);

        vec2 sampleCoord = vec2(((spiralNormPos.x + 1) / 2.0) * texdim0.x, ((spiralNormPos.y + 1) / 2.0) * texdim0.y);

        vec4 sample = texture2DRect(tex0, sampleCoord);

        gl_FragColor = sample;
    }

]]>
        </program>
    </language>
</jittershader>