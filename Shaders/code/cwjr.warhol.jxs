<jittershader name="warhol">

    <param name="tex0" type="int" default="0"/>

    <language name="glsl" version="1.2">

        <bind param="tex0" program="fp"/>

        <program name="vp" type="vertex">
<![CDATA[

    #version 120

    varying vec2 texcoord0;
    varying vec2 texdim0;

    void main(void) {

        gl_Position = ftransform();

        texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
        texdim0 = vec2(abs(gl_TextureMatrix[0][0][0]), abs(gl_TextureMatrix[0][1][1]));
    }

]]>
        </program>
        <program name="fp" type="fragment">
<![CDATA[

    #version 120

    varying vec2 texdim0;
    varying vec2 texcoord0;

    uniform sampler2DRect tex0;

    void main(void) {
        
        vec2 tileSize = vec2(texdim0.x / 2.0, texdim0.y / 2.0);

        vec2 tile = vec2(floor(texcoord0.x / tileSize.x), floor(texcoord0.y / tileSize.y));

        vec2 tilePos = vec2((texcoord0.x - (tile.x * tileSize.x)) / tileSize.x, (texcoord0.y - (tile.y * tileSize.y)) / tileSize.y);

        vec4 sample = texture2DRect(tex0, vec2(tilePos.x * texdim0.x, tilePos.y * texdim0.y));

        if(tile.x + tile.y == 2) {
            sample = vec4(sample.r, sample.g, sample.r * sample.g, 1.0);
        }
        else if(tile.x == 1) {
            sample = vec4(sample.g * sample.b, sample.g, sample.b, 1.0);
        }
        else if(tile.y == 1) {
            sample = vec4(sample.r, sample.r * sample.b, sample.b, 1.0);
        }

        gl_FragColor = vec4(sample.rgb, 1.0);
    }

]]>
        </program>
    </language>
</jittershader>